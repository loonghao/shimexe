name: Release

# This workflow handles release-please automation and publishing
# It creates releases when changes are pushed to main, and publishes binaries when releases are created
on:
  workflow_dispatch:

permissions:
  contents: write # Required for creating releases and uploading artifacts
  pull-requests: write # Required for release-please
  issues: write # Required for release-please
  id-token: write # Required for trusted publishing

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings

jobs:
  # First job: Run release-please to create releases and tags
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      releases_created: ${{ steps.release.outputs.releases_created }}
    steps:
      - name: "Cleanup stale 'autorelease: pending' labels on merged PRs"
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const q = `repo:${owner}/${repo} label:\"autorelease: pending\" is:pr is:merged`;
            const resp = await github.rest.search.issuesAndPullRequests({ q });
            for (const pr of resp.data.items || []) {
              try {
                await github.rest.issues.removeLabel({
                  owner,
                  repo,
                  issue_number: pr.number,
                  name: 'autorelease: pending',
                });
                core.info(`Removed 'autorelease: pending' from #${pr.number}`);
              } catch (e) {
                core.warning(`Label cleanup failed for #${pr.number}: ${e.message}`);
              }
            }
      - name: Run release-please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  # moved to release-assets.yml
  # upload-assets: {}

  # moved to package-publish.yml
  # publish-packages: {}

  # moved to package-publish.yml or separate chocolatey workflow
  # publish-chocolatey: {}



